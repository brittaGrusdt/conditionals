default:
  generate_utterances: false
  generate_tables: false
  seed_tables: 202008
  generate_cns: false
  save: true
  cost_conditional: 0
  alpha: 3
  theta: 0.9
  verbose: false
  cns: !expr c("A implies C", "C implies A", "A implies -C", "C implies -A", "A || C")
  packages:  !expr c("./node_modules/conditionalsHelpers",
                     "./node_modules/conditionalsDefault")
  model_path: "./model/default-model/default-model.wppl"
  seed_webppl: !expr as.numeric(Sys.time())
  add_accept_conditions: true
  indep_sigma: 0.01 # previously: 0.001
  nor_beta: !expr NA
  nor_theta: !expr NA

tables:
  nor_theta: !expr NA
  nor_beta: !expr NA
  indep_sigma: 0.001
  n_tables: 20000
  seed: 202009
  tables_path: "./data/tables-20000.rds"
  bias: "none"
  
speaker_tables_stimuli:
  tables_path: "data/tables-stimuli-to-wppl.rds"
  target_dir: "data/predictions-tables-stimuli"
  target_fn: "results-tables-stimuli.rds"
  target_params: "params-tables-stimuli.rds"
  n_tables: 2000
  n_ind_tables: 8000
  cns: !expr c("A implies C", "A implies -C", "C implies A", "C implies -A", "A || C")
  speaker_intents: !expr c("")
  bias: "none"
  level_max: "speaker"
  vars: !expr c("A", "C")
  n_samples: 5000
  utts_path: "data/default-model/utterances-tables-stimuli.rds"
  utt: ""
  theta: 0.8
  
  

## 1. bias configurations ##
bias_none:
  target_dir: "./data/default-model"
  target_fn: "results-none.rds"
  target_params: "params-none.rds"
  utts_fn: "utterances-none.rds"
  vars: !expr c("A", "C")
  cns: !expr c("A implies C", "C implies A","A implies -C", "C implies -A", "A || C")
  speaker_intents: !expr c("")
  bias: "none"
  n_tables: 2000
  n_ind_tables: 8000
  tables_fn: "tables-default.rds"

bias_pizza:
  target_dir: "./data/special-conditionals"
  target_fn: "results-pizza-without-intents.rds"
  target_params: "params-pizza-without-intents.rds"
  utts_fn: "utterances-pizza.rds"
  vars: !expr c("A", "C")
  speaker_intents: !expr c("") # c("ISA", "PA")
  bias: "pizza"
  n_tables: 10000
  n_ind_tables: 10000
  tables_fn: "tables_independent.rds"

bias_pizza_intents:
  inherits: bias_pizza
  target_fn: "results-pizza-with-intents.rds"
  target_params: "params-pizza-with-intents.rds"
  speaker_intents: !expr c("ISA", "PA")

bias_lawn:
  bias: "lawn"
  target_dir: "./data/special-conditionals"
  target_fn: "results-lawn.rds"
  target_params: "params-lawn.rds"
  utts_fn: "utterances-lawn.rds"
  vars: !expr c("A", "C", "B")
  cns: !expr c("A,B->C", "only A implies C", "A,B->D->C", "A implies C", "A || C")
  utterances: !expr c("B > C", "A > C", "A", "-A", "C", "-C", "B", "-B",
                      "likely A", "likely -A", "likely C", "likely -C",
                      "likely B", "likely -B")
  speaker_intents: !expr c("")
  n_tables: 2000
  n_ind_tables: 10000
  tables_fn: "tables-lawn"

sundowners:
  model_path: "./model/douven-examples/sundowners.wppl"
  utt: "R > -S"
  prior_pr: !expr c(0.5)
  condition_on: !expr NA
  level_max: "PL"
  bias: ""
  add_accept_conditions: FALSE
  target: "./data/douven-examples/results-sundowners.rds"
  target_params: "./data/douven-examples/params-sundowners.rds"
  tables_fn: "tables-sundowners"
  
skiing:
  model_path: "./model/douven-examples/skiing.wppl"
  utt: "E > S"
  prior_pe: 0.2
  evidence: "C"
  condition_on: !expr c("C")
  level_max: "PL"
  bias: ""
  add_accept_conditions: FALSE
  target: "./data/douven-examples/results-skiing.rds"
  target_params: "./data/douven-examples/params-skiing.rds"
  tables_fn: "tables-skiing"


## 2. Level configurations ##
# @arg utt: - if set to "p_delta" or "p_rooij", respective value must be
#           large (see in webppl file) for all states given to the speaker,
#           - if set to "" no condition, just sampled from prior as usual
speaker:
  level_max: "speaker"
  utt: ""
  target_dir: "./data/default-model"
  target_fn: "results-speaker.rds"
  target_params: "params-speaker.rds"
  n_samples: 20000 # bns sampled from prior
  
speaker_literal:
  level_max: "speaker"
  utt: "A > C" #condition s.t. only states where utt is true are considered
  target_dir: "./data/default-model"
  target_fn: "results-speaker-literal.rds"
  target_params: "params-speaker-literal.rds"
  n_samples: 20000 # bns sampled from prior

speaker_p_rooij:
  level_max: "speaker"
  utt: "p_rooij"
  target_dir: "./data/default-model"
  target_fn: "results-speaker-p_rooij-large.rds"
  target_params: "params-speaker-p_rooij-large.rds"
  n_samples: 20000 # bns sampled from prior

# speaker given certain condition,
# e.g. speaker only gets states where utt is applicable
speaker_c:
  inherits: speaker
  target_fn: "results_speaker_given_C.rds"
  target_params: "params-speaker-given-C.rds"
  utt: "C"
# not-conj, when utt=C, but neither A and C nor -A and C are true (in webppl)!

# speaker only sees states where she is un/certain about A and about C
speaker_uncertain:
  inherits: speaker
  target_fn: "results-speaker-uncertain.rds"
  target_params: "params-speaker-uncertain.rds"
  utt: "uncertainAandC"

speaker_certain:
  inherits: speaker
  target_fn: "results-speaker-certain.rds"
  target_params: "params-speaker-certain.rds"
  utt: "certainAandC"

prior:
  level_max: "prior"
  utt: "A > C"

priorN:
  level_max: "priorN"
  utt: ""
  target_params: "params-priorN.rds"
  n_samples: 20000

ll:
  level_max: "LL"
  utt: "A > C"

pl:
  level_max: "PL"
  utt: "A > C"


#dutchman:
#  target_dir: "./data/default-model"
#  n_tables: 10000
#
#judy:
#  judy_q: 0.75
#  target_dir: "./data/judy"
#  target_fn: "results-judy.rds"
#  utt: "A >q C"

# there needs to be 1 blank final line!
